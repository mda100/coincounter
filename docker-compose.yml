services:

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: coincounter
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  api:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    command: >
      sh -c "sleep 10 && python api/manage.py migrate --run-syncdb &&
             gunicorn api.config.wsgi:application --bind 0.0.0.0:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=api.config.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app

  polling:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    command: >
      sh -c "sleep 15 && python polling/run_beat.py"
    environment:
      - DJANGO_SETTINGS_MODULE=polling.config.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - redis
      - postgres
      - api
    volumes:
      - ./backend:/app

  worker:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    command: >
      sh -c "python worker/run.py"
    environment:
      - DJANGO_SETTINGS_MODULE=api.config.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - redis
      - postgres
    volumes:
      - ./backend:/app
    deploy:
      replicas: 2
    

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./coincounter:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
    command: npm run dev

volumes:
  postgres_data:

